{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\myca0\\\\react-login\\\\frontend\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate();\n\n  // Call the server API to check if the given email ID already exists\n  const checkAccountExists = callback => {\n    fetch('http://localhost:3001/check-account', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    }).then(r => r.json()).then(r => {\n      callback(r === null || r === void 0 ? void 0 : r.userExists);\n    });\n  };\n\n  // Log in a user using email and password\n  const logIn = () => {\n    fetch('http://localhost:3001/auth', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(r => r.json()).then(r => {\n      if ('success' === r.message) {\n        localStorage.setItem('user', JSON.stringify({\n          email,\n          token: r.token\n        }));\n        props.setLoggedIn(true);\n        props.setEmail(email);\n        navigate('/');\n      } else {\n        window.alert('Wrong email or password');\n      }\n    });\n  };\n  const onButtonClick = () => {\n    // Set initial error values to empty\n    setEmailError('');\n    setPasswordError('');\n\n    // Check if the user has entered both fields correctly\n    if ('' === email) {\n      setEmailError('Please enter your email');\n      return;\n    }\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)) {\n      setEmailError('Please enter a valid email');\n      return;\n    }\n    if ('' === password) {\n      setPasswordError('Please enter a password');\n      return;\n    }\n    if (password.length < 7) {\n      setPasswordError('The password must be 8 characters or longer');\n      return;\n    }\n\n    // Check if email has an account associated with it\n    checkAccountExists(accountExists => {\n      // If yes, log in\n      if (accountExists) logIn();\n      // Else, ask user if they want to create a new account and if yes, then log in\n      else if (window.confirm('An account does not exist with this email address: ' + email + '. Do you want to create a new account?')) {\n        logIn();\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'mainContainer',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'titleContainer',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'inputContainer',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        placeholder: \"Enter your email here\",\n        onChange: ev => setEmail(ev.target.value),\n        className: 'inputBox'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"errorLabel\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'inputContainer',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        placeholder: \"Enter your password here\",\n        onChange: ev => setPassword(ev.target.value),\n        className: 'inputBox'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"errorLabel\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'inputContainer',\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: 'inputButton',\n        type: \"button\",\n        onClick: onButtonClick,\n        value: 'Log in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OEMjGIKf0uyNo1+Wd0uI/AiCj4A=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","navigate","checkAccountExists","callback","fetch","method","headers","body","JSON","stringify","then","r","json","userExists","logIn","message","localStorage","setItem","token","setLoggedIn","window","alert","onButtonClick","test","length","accountExists","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onChange","ev","target","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/myca0/react-login/frontend/src/login.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [emailError, setEmailError] = useState('')\r\n  const [passwordError, setPasswordError] = useState('')\r\n\r\n  const navigate = useNavigate()\r\n\r\n  // Call the server API to check if the given email ID already exists\r\n  const checkAccountExists = (callback) => {\r\n    fetch('http://localhost:3001/check-account', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email }),\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        callback(r?.userExists)\r\n      })\r\n  }\r\n\r\n  // Log in a user using email and password\r\n  const logIn = () => {\r\n    fetch('http://localhost:3001/auth', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        if ('success' === r.message) {\r\n          localStorage.setItem('user', JSON.stringify({ email, token: r.token }))\r\n          props.setLoggedIn(true)\r\n          props.setEmail(email)\r\n          navigate('/')\r\n        } else {\r\n          window.alert('Wrong email or password')\r\n        }\r\n      })\r\n  }\r\n\r\n  const onButtonClick = () => {\r\n    // Set initial error values to empty\r\n    setEmailError('')\r\n    setPasswordError('')\r\n\r\n    // Check if the user has entered both fields correctly\r\n    if ('' === email) {\r\n      setEmailError('Please enter your email')\r\n      return\r\n    }\r\n\r\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)) {\r\n      setEmailError('Please enter a valid email')\r\n      return\r\n    }\r\n\r\n    if ('' === password) {\r\n      setPasswordError('Please enter a password')\r\n      return\r\n    }\r\n\r\n    if (password.length < 7) {\r\n      setPasswordError('The password must be 8 characters or longer')\r\n      return\r\n    }\r\n\r\n    // Check if email has an account associated with it\r\n    checkAccountExists((accountExists) => {\r\n      // If yes, log in\r\n      if (accountExists) logIn()\r\n      // Else, ask user if they want to create a new account and if yes, then log in\r\n      else if (\r\n        window.confirm(\r\n          'An account does not exist with this email address: ' + email + '. Do you want to create a new account?',\r\n        )\r\n      ) {\r\n        logIn()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={'mainContainer'}>\r\n      <div className={'titleContainer'}>\r\n        <div>Login</div>\r\n      </div>\r\n      <br />\r\n      <div className={'inputContainer'}>\r\n        <input\r\n          value={email}\r\n          placeholder=\"Enter your email here\"\r\n          onChange={(ev) => setEmail(ev.target.value)}\r\n          className={'inputBox'}\r\n        />\r\n        <label className=\"errorLabel\">{emailError}</label>\r\n      </div>\r\n      <br />\r\n      <div className={'inputContainer'}>\r\n        <input\r\n          value={password}\r\n          placeholder=\"Enter your password here\"\r\n          onChange={(ev) => setPassword(ev.target.value)}\r\n          className={'inputBox'}\r\n        />\r\n        <label className=\"errorLabel\">{passwordError}</label>\r\n      </div>\r\n      <br />\r\n      <div className={'inputContainer'}>\r\n        <input className={'inputButton'} type=\"button\" onClick={onButtonClick} value={'Log in'} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}